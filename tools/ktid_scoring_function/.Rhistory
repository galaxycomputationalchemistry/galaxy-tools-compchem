install.packages("xlsx")
package("xlsx")
require(xlsx)
?read.xlsx
?read.xlsx("C:\Users\parkerlab\Downloads\ppse.xlsx")
?read.xlsx("C:/Users/parkerlab/Downloads/ppse.xlsx")
figs<-read.xlsx("C:/Users/parkerlab/Downloads/ppse.xlsx")
figs<-read.xlsx("C:/Users/parkerlab/Downloads/ppse.xlsx",sheetIndex = 1)
setwd("C:/Users/parkerlab/Desktop/Laura Difference Finder files/LKB1 trypsin")
setwd("C:/Users/parkerlab/Desktop/Laura Difference Finder files/LKB1 trypsin/No duplicates")
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/Difference Finder/all stuff/Difference finderMADE 7 TO 7 fastversion 2-14-2019.R', echo=TRUE)
setwd("C:/Users/parkerlab/Desktop/Laura Difference Finder files/LKB1 trypsin/No duplicates")
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/Difference Finder/all stuff/difference finder for 2 overlaps proper names 7-7_1-15-2019.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/Difference Finder/all stuff/Difference finderMADE 7 TO 7 fastversion 2-14-2019.R', echo=TRUE)
setwd("C:/Users/parkerlab/Desktop/Laura Difference Finder files/LKB1 trypsin/No duplicates")
source('C:/Users/parkerlab/Desktop/Laura Difference Finder files/LKB1 trypsin/difference_finder-beba4066121e/difference_finder-beba4066121e/all stuff/Difference finderMADE 7 TO 7 1-15-2019.R', echo=TRUE)
source('C:/Users/parkerlab/Desktop/Laura Difference Finder files/LKB1 trypsin/difference_finder-beba4066121e/difference_finder-beba4066121e/all stuff/Difference finderMADE 7 TO 7 1-15-2019.R', echo=TRUE)
source('C:/Users/parkerlab/Desktop/Laura Difference Finder files/LKB1 trypsin/difference_finder-beba4066121e/difference_finder-beba4066121e/all stuff/Difference finderMADE 7 TO 7 1-15-2019.R', echo=TRUE)
D835YFinalMatrix
FTLwtmotifs
DataFilename<-"stRequiredData.RData"
load(DataFilename)
setwd("F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/Kinatest Fishertest/KT-ID fisher test")
load(DataFilename)
setwd("F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/ST fishertest/KT-ID fisher test")
load(DataFilename)
setwd("C:/Users/parkerlab/Downloads/stuff")
source('C:/Users/parkerlab/Desktop/Laura Difference Finder files/Difference finderMADE 7 TO 7 1-15-2019.R', echo=TRUE)
#put the names of your input files here
FirstSubstrateSet<- read.csv("Galaxy1071-(17A_TiO2_Substrates.csv).csv", stringsAsFactors=FALSE)
Firstsubbackfreq<- read.csv("Galaxy1072-(17A_TiO2_SubstrateBackgroundFrequency.csv).csv", header=FALSE, stringsAsFactors=FALSE)
SecondSubstrateSet<- read.csv("Galaxy1073-(17A_FeNTA_Substrates.csv) (1).csv", stringsAsFactors=FALSE)
Secondsubbackfreq<- read.csv("Galaxy1074-(17A_FeNTA_SubstrateBackgroundFrequency.csv).csv", header=FALSE, stringsAsFactors=FALSE)
#I should make an SOP for this.  Problems we encountered: no x in the xY motif, and the kilodemon
#the output files have both Y and xY, they shouldn't why is that happening?  make it not happen
#make sure that accession numbers stay locked to each motif, somehow
#output should look just like the KALIP input
#ff you want ONLY FULL MOTIFS, put "YES" here, please use all caps
FullMotifsOnly_questionmark<-"NO"
#If you want ONLY TRUNCATED MOTIFS, put "YES" here, please use all caps
TruncatedMotifsOnly_questionmark<-"NO"
#if you want to find the overlap, put a "YES" here (all caps), if you want to find the non-overlap, put "NO" (all caps)
Are_You_Looking_For_Commonality<-"NO"
First_unshared_motifs_table<-"Substrates 3A no negatives.csv"
First_unshared_subbackfreq<-"SBF 3A no negatives.csv"
Second_unshared_motifs_table<-"Substrates 3B negatives.csv"
Second_unshared_subbackfreq<-"SBF 3B negatives.csv"
FirstCentralLetters<-FirstSubstrateSet[,11]
SecondCentralLetters<-SecondSubstrateSet[,11]
FirstEsses<-sapply(FirstCentralLetters, grepl, pattern="S", ignore.case=TRUE)
FirstTees<-sapply(FirstCentralLetters, grepl, pattern="T", ignore.case=TRUE)
FirstWys<-sapply(FirstCentralLetters, grepl, pattern="Y", ignore.case=TRUE)
SecondEsses<-sapply(SecondCentralLetters, grepl, pattern="S", ignore.case=TRUE)
SecondTees<-sapply(SecondCentralLetters, grepl, pattern="T", ignore.case=TRUE)
SecondWys<-sapply(SecondCentralLetters, grepl, pattern="Y", ignore.case=TRUE)
FirstCentralLetters<-replace(FirstCentralLetters,FirstEsses,"xS")
FirstCentralLetters<-replace(FirstCentralLetters,FirstTees,"xT")
FirstCentralLetters<-replace(FirstCentralLetters,FirstWys,"xY")
SecondCentralLetters<-replace(SecondCentralLetters,SecondEsses,"xS")
SecondCentralLetters<-replace(SecondCentralLetters,SecondTees,"xT")
SecondCentralLetters<-replace(SecondCentralLetters,SecondWys,"xY")
FirstCentralLetters->FirstSubstrateSet[,11]
SecondCentralLetters->SecondSubstrateSet[,11]
if (FullMotifsOnly_questionmark!="YES"&&TruncatedMotifsOnly_questionmark!="YES"){
FTLwtmotifs=matrix(,nrow = nrow(FirstSubstrateSet),ncol=1)
FTLwtAccessionNumbers=matrix(,nrow = nrow(FirstSubstrateSet),ncol=1)
for (i in 1:nrow(FirstSubstrateSet)){
FTLwtletters<-FirstSubstrateSet[i,4:18]
FTLwtletters<-FTLwtletters[FTLwtletters !="XXXXX"]
FTLwtletters<-paste(FTLwtletters, sep="", collapse="")
leftspaces<-c()
rightspaces<-c()
YYYmotif <- unlist(strsplit(FTLwtletters, split = ""))
YYYposition <- match(x = "x", table = YYYmotif)
#position itself tells me how much is to the left of that X by what it's number is.  x at position 4 tells me that there are
#just 3 letters to the left of x
YYYLettersToTheLeft <- YYYposition - 1
#how many letters to the right SHOULD just be length(motif)-position-1 if it's 5 long and x is at 3 then Y is at 4 and there is
#just 1 spot to the right of Y so LettersToTheRight<-1 because 5-3-1=1
YYYLettersToTheRight <- length(YYYmotif) - YYYposition - 1
#then sanity check, we're currently looking only at +/-4, but this spot allows for up to +/- 7 as well, just depends on what the
#variable the user puts in is
if (YYYLettersToTheLeft < 7 | YYYLettersToTheRight < 7) {
leftspaces<-rep(" ",times=(7-YYYLettersToTheLeft))
rightspaces<-rep(" ",times=7-(YYYLettersToTheRight))
#add blank spaces if the motif has less than 4 letters to the left/right
motif<-c(leftspaces,YYYmotif,rightspaces)
#save that motif, which is the Y and +/- 4 amino acids, including truncation
motif<-motif[!motif %in% "x"]
motif<-paste(motif, sep="", collapse="")
FTLwtletters<-motif
FTLwtmotifs[i,1]<-FTLwtletters
FTLwtAccessionNumbers[i,1]<-FirstSubstrateSet[i,3]
}
if(YYYLettersToTheLeft>6 && YYYLettersToTheRight>6){
motif<-YYYmotif
#add blank spaces if the motif has less than 4 letters to the left/right
motif<-c(leftspaces,YYYmotif,rightspaces)
#save that motif, which is the Y and +/- 4 amino acids, including truncation
motif<-motif[!motif %in% "x"]
motif<-paste(motif, sep="", collapse="")
FTLwtletters<-motif
FTLwtmotifs[i,1]<-FTLwtletters
FTLwtAccessionNumbers[i,1]<-FirstSubstrateSet[i,3]
}
}
D835Ymotifs=matrix(,nrow = nrow(SecondSubstrateSet),ncol=1)
D835YAccessionNumbers<-matrix(,nrow = nrow(SecondSubstrateSet),ncol = 1)
for (i in 1:nrow(SecondSubstrateSet)){
D835letters<-SecondSubstrateSet[i,4:18]
D835letters<-D835letters[D835letters !="XXXXX"]
D835letters<-paste(D835letters, sep="", collapse="")
leftspaces<-c()
rightspaces<-c()
YYYmotif <- unlist(strsplit(D835letters, split = ""))
YYYposition <- match(x = "x", table = YYYmotif)
#position itself tells me how much is to the left of that X by what it's number is.  x at position 4 tells me that there are
#just 3 letters to the left of x
YYYLettersToTheLeft <- YYYposition - 1
#how many letters to the right SHOULD just be length(motif)-position-1 if it's 5 long and x is at 3 then Y is at 4 and there is
#just 1 spot to the right of Y so LettersToTheRight<-1 because 5-3-1=1
YYYLettersToTheRight <- length(YYYmotif) - YYYposition - 1
#then sanity check, we're currently looking only at +/-4, but this spot allows for up to +/- 7 as well, just depends on what the
#variable the user puts in is
if (YYYLettersToTheLeft < 7 | YYYLettersToTheRight < 7) {
leftspaces<-rep(" ",times=(7-YYYLettersToTheLeft))
rightspaces<-rep(" ",times=7-(YYYLettersToTheRight))
#add blank spaces if the motif has less than 4 letters to the left/right
motif<-c(leftspaces,YYYmotif,rightspaces)
#save that motif, which is the Y and +/- 4 amino acids, including truncation
motif<-motif[!motif %in% "x"]
motif<-paste(motif, sep="", collapse="")
D835letters<-motif
D835Ymotifs[i,1]<-D835letters
D835YAccessionNumbers[i,1]<-FirstSubstrateSet[i,3]
}
if(YYYLettersToTheLeft>6 && YYYLettersToTheRight>6){
motif<-YYYmotif
#add blank spaces if the motif has less than 4 letters to the left/right
motif<-c(leftspaces,YYYmotif,rightspaces)
#save that motif, which is the Y and +/- 4 amino acids, including truncation
motif<-motif[!motif %in% "x"]
motif<-paste(motif, sep="", collapse="")
D835letters<-motif
D835Ymotifs[i,1]<-D835letters
D835YAccessionNumbers[i,1]<-FirstSubstrateSet[i,3]
}
}
names(FTLwtmotifs)<-FTLwtAccessionNumbers
names(D835Ymotifs)<-D835YAccessionNumbers
}
length(names(FTLwtmotifs))
length(names(D835Ymotifs))
FTLwtmotifsFINAL<-FTLwtmotifs[!FTLwtmotifs %in% D835Ymotifs]
FTLwtmotifsFINAL<-FTLwtmotifsFINAL[!duplicated(FTLwtmotifsFINAL)]
D835YmotifsFINAL<-D835Ymotifs[!D835Ymotifs %in% FTLwtmotifs]
D835YmotifsFINAL<-D835YmotifsFINAL[!duplicated(D835YmotifsFINAL)]
length(names(D835Ymotifs))
length(names(D835YmotifsFINAL))
for (k in 1:length(FTLwtmotifsFINAL)) {
AN<-00000
#I don't remember why, but I felt it necessary to destroy the accession number multiple times to ensure it is
#destroyed immediately after use
for (m in 1:ncol(Firstsubbackfreq)) {
AN <- as.character(Firstsubbackfreq[1, m])
if (grepl(pattern = AN,
x = names(FTLwtmotifsFINAL[k]),
fixed = TRUE) == TRUE) {
outputmatrix <- as.character(Firstsubbackfreq[, m])
outputmatrix <- matrix(outputmatrix, nrow = 1)
#with that accession number, find a match in the subbackfreq file and save it here
FTLFinalMatrix<-rbind(FTLFinalMatrix,outputmatrix)
}
}
}
columnalheader<-c(rep(NA,36))
FTLFinalMatrix<-matrix(data =columnalheader,nrow = 1)
for (k in 1:length(FTLwtmotifsFINAL)) {
AN<-00000
#I don't remember why, but I felt it necessary to destroy the accession number multiple times to ensure it is
#destroyed immediately after use
for (m in 1:ncol(Firstsubbackfreq)) {
AN <- as.character(Firstsubbackfreq[1, m])
if (grepl(pattern = AN,
x = names(FTLwtmotifsFINAL[k]),
fixed = TRUE) == TRUE) {
outputmatrix <- as.character(Firstsubbackfreq[, m])
outputmatrix <- matrix(outputmatrix, nrow = 1)
#with that accession number, find a match in the subbackfreq file and save it here
FTLFinalMatrix<-rbind(FTLFinalMatrix,outputmatrix)
}
}
}
FTLFinalMatrix<-FTLFinalMatrix[!duplicated(FTLFinalMatrix),]
FTLFinalMatrix<-FTLFinalMatrix[2:nrow(FTLFinalMatrix),]
columnalheader<-c(rep(NA,36))
D835YFinalMatrix<-matrix(data =columnalheader,nrow = 1)
for (k in 1:length(D835YmotifsFINAL)) {
#I don't remember why, but I felt it necessary to destroy the accession number multiple times to ensure it is
#destroyed immediately after use
for (m in 1:ncol(Secondsubbackfreq)) {
AN <- as.character(Secondsubbackfreq[1, m])
if (grepl(pattern = AN,
x = names(D835YmotifsFINAL[k]),
fixed = TRUE) == TRUE) {
outputmatrix <- as.character(Secondsubbackfreq[, m])
outputmatrix <- matrix(outputmatrix, nrow = 1)
#with that accession number, find a match in the subbackfreq file and save it here
D835YFinalMatrix<-rbind(D835YFinalMatrix,outputmatrix)
}
}
}
D835YFinalMatrix<-D835YFinalMatrix[!duplicated(D835YFinalMatrix),]
D835YFinalMatrix<-D835YFinalMatrix[2:nrow(D835YFinalMatrix),]
FTLoutputmatrix<-matrix(data=c(FTLwtmotifsFINAL,names(FTLwtmotifsFINAL)),ncol = 2)
tail(FTLoutputmatrix)
D835Youtputmatrix<-matrix(data=c(D835YmotifsFINAL,names(D835YmotifsFINAL)),ncol = 2)
source('C:/Users/parkerlab/Desktop/Laura Difference Finder files/Difference finderMADE 7 TO 7 1-15-2019.R', echo=TRUE)
D835Youtputmatrix<-matrix(data=c(D835YmotifsFINAL,names(D835YmotifsFINAL)),ncol = 2)
tail(D835Youtputmatrix)
length(names(D835YmotifsFINAL))
tail(D835YmotifsFINAL)
tail(D835Ymotifs)
tail(FTLwtmotifs)
names(tail(D835Ymotifs))
names((D835Ymotifs))
names(FTLwtmotifs)
head(FirstSubstrateSet)
head(SecondSubstrateSet)
source('C:/Users/parkerlab/Desktop/Laura Difference Finder files/Difference finderMADE 7 TO 7 1-15-2019.R', echo=TRUE)
source('C:/Users/parkerlab/Desktop/Laura Difference Finder files/Difference finderMADE 7 TO 7 1-15-2019.R', echo=TRUE)
source('C:/Users/parkerlab/Desktop/Laura Difference Finder files/Difference finderMADE 7 TO 7 1-15-2019.R', echo=TRUE)
source('C:/Users/parkerlab/Desktop/Laura Difference Finder files/Difference finder MADE 7 TO 7 4-18-2019.R', echo=TRUE)
ThisKinSheet<-read.csv("Fisher-Table.csv" header=FALSE, stringsAsFactors=FALSE)
CharTable<-read.csv("Fisher-Char.csv", header = FALSE,stringsAsFactors = FALSE)
setwd("F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID")
CharTable<-read.csv("Fisher-Char.csv", header = FALSE,stringsAsFactors = FALSE)
ThisKinSheet<-read.csv("Fisher-Table.csv", header=FALSE, stringsAsFactors=FALSE)
ThisKinTable<-ThisKinSheet[2:22,]
View(ThisKinTable)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
CharTable<-read.csv("Fisher-Char.csv", header = FALSE,stringsAsFactors = FALSE)
ThisKinSheet<-read.csv("Fisher-Table.csv", header=FALSE, stringsAsFactors=FALSE)
NormalizationScore<-ThisKinSheet[2,1]
NormalizationScore<-CharTable[2,1]
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
RanksPeptides<-with(PeptidesWithRanks, order(Scores,AllActive))
write.table(RanksPeptides,file = "output.csv",append = FALSE,row.names = FALSE,col.names = TRUE,sep = ",")
RanksPeptides<-PeptidesWithRanks[order(PeptidesWithRanks[,5), PeptidesWithRanks[,3]])]
RanksPeptides<-PeptidesWithRanks[order(PeptidesWithRanks[,5], PeptidesWithRanks[,3])]
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
Scores = Scores*-1
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
Scores<-ThisKinGeneratedScores
Scores<-Scores*-1
order(scores)
order(Scores)
Scores[order(Scores)]
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
LynActive
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
source('F:/ParkerLab Dropbox/Dropbox (Parker Lab)/Parker Lab Shared Files/Dropbox (Parker Lab)/Parker Lab Shared Files/CURRENT LAB MEMBERS/John B/Parker Lab/GalaxyP tools/scoring function KTID/KinatestFisherScoring.R', echo=TRUE)
args
toupper(6)
Positionm6<-"123kjhsdfk245                    23ddddd"
Positionm6<-toupper(M6)
M6<-"123kjhsdfk245                    23ddddd"
Positionm6<-toupper(M6)
Positionm6<-gsub("[^a-zA-Z]", "", Positionm6)
Positionm6<-unlist(strsplit(Positionm6,""))
