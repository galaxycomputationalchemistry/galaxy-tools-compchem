<tool id="ambertools_acpype" name="Generate MD topologies for small molecules" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
    <description>using acpype</description>
    <macros>
        <import>macros.xml</import>
        <token name="@GALAXY_VERSION@">0</token>
    </macros>
    <expand macro="requirements">
        <requirement type="package" version="2021.02.05.22.15">acpype</requirement>
    </expand>
    <command detect_errors="exit_code"><![CDATA[
        ln -s '$input1' ./input1.${input1.ext} &&
        acpype -i './input1.${input1.ext}'
            -n '$charge'
            -b base
            -m '$multiplicity'
            -a '$atomtype'
            -c '$charge_method'
            -o gmx
    ]]></command>
    <inputs>
        <param name="input1" type="data" format="pdb,mol2" label="Input file" help="Structure of the compound in pdb or mol2 format"/>
        <param name="charge" type="integer" value="0" label="Charge of the molecule"/>
        <param name="multiplicity" type="integer" value="1" label="Multiplicity" help="Default value is 1, which is correct for almost all organic molecules."/>
        <param name="atomtype" type="select" value="gaff" label="Force field to use for parameterization">
            <option value="gaff">gaff</option>
            <option value="amber">AMBER14SB</option>
            <option value="gaff2">gaff2</option>
            <option value="amber2">AMBER14SB + gaff2</option>
        </param>
        <param name="charge_method" type="select" value="bcc" label="Charge method">
            <option value="bcc">bcc (default)</option>
            <option value="gas">gas</option>
            <option value="user">charges provided by user in mol2 file</option>
        </param>
        <param name="save_gro" type="boolean" value="false" label="Save GRO file?" help="Save atomic coordinates of ligand in GRO format."/>
    </inputs>
    <outputs>
        <data format="itp" name="output" label="Topology" from_work_dir='base.acpype/base_GMX.itp'/>
        <data format="gro" name="gro_output" label="Structure file (GRO format, optional)" from_work_dir="base.acpype/base_GMX.gro">
            <filter>save_gro</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input1" value="JZ4.mol2"/>
            <param name="save_gro" value="True"/>
            <param name="charge_method" value="bcc"/>
            <output name="output">
                <assert_contents>
                    <has_line line="[ atoms ]"/>
                    <has_text text="    15   ha     1   JZ4    H4   15     0.13"/>
                    <has_text text="    18   hc     1   JZ4    H7   18     0.05"/>
                </assert_contents>
            </output>
            <output name="gro_output" file="base_GMX.gro" lines_diff="2"/>
        </test>
        <test>
            <param name="input1" value="LigA_output.mol2"/>
            <param name="save_gro" value="false"/>
            <param name="charge_method" value="user"/>
            <output name="output" file="LigA_output.top" lines_diff="26"/>
        </test>
    </tests>
    <help><![CDATA[
Tool to produce GROMACS topologies for small molecules using the acpype interface to AmberTools.

.. class:: infomark

**Input**

Either a mol2 file (more appropriate for small structures) or a 
pdb file. If you want to parameterize a large macromolecule 
(which is more likely to be stored in PDB format, e.g. a protein) 
consider using a tool such as 'GROMACS initial setup' instead.

.. class:: infomark

**Outputs**

GROMACS topology for the ligand, in itp format. Optional: structure file, in gro format.


    ]]></help>
    <expand macro="citations">
        <citation type="doi">doi:10.1186/1756-0500-5-367</citation>
    </expand>
</tool>
